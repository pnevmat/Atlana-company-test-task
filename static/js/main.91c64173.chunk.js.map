{"version":3,"sources":["components/Header/header.module.css","components/Filter/Filter.module.css","components/RepositoriesList/repositoriesList.module.css","components/UserInformation/userInformation.module.css","redux/actions/getUsersDataActions.js","redux/reducers/usersDataReducer.js","redux/actions/getUserDataActions.js","redux/actions/resetActions.js","redux/reducers/userDataReducer.js","redux/actions/getUserRepositoriesActions.js","redux/reducers/userRepositoriesReducer.js","redux/reducers/errorReducer.js","redux/store.js","redux/operations/getUsersDataOperation.js","redux/operations/getUserDataOperation.js","redux/operations/getUserRepositoriesOperation.js","redux/operations/resetUserAndRepositoriesDataOperation.js","redux/selectors/selectors.js","components/Header/header.js","components/UserInformation/UserInformation.js","components/Filter/Filter.js","components/UsersList/UsersList.js","components/RepositoriesList/RepositoriesList.js","App.js","index.js","components/UsersList/usersList.module.css"],"names":["module","exports","getUsersDataRequest","createAction","getUsersDataSuccess","getUsersDataError","usersDataReducer","createReducer","getUsersDataActions","_","payload","getUserDataRequest","getUserDataSuccess","getUserDataError","resetRequest","resetSuccess","resetError","getUserDataActions","resetActions","getUserRepositoriesRequest","getUserRepositoriesSuccess","getUserRepositoriesError","userRepositoriesReducer","getUserRepositoriesActions","store","configureStore","reducer","usersData","userData","userDataReducer","userRepositories","error","errorReducer","middleware","getDefaultMiddleware","serializableCheck","devTools","process","axios","defaults","baseURL","headers","common","Accept","getUsersDataOperation","dispatch","a","get","response","data","message","getUserDataOperation","userLogin","getUserRepositoriesOperation","resetUserAndRepositoriesDataOperation","getAllUsers","state","getAllRepositories","getUserData","getAllUsersSelector","createSelector","users","getAllRepositoriesSelector","repositories","getUserDataSelector","Header","onClick","className","styles","header","goBackButton","type","headerTitle","UserInformation","userCardContainer","userCard","userAvatar","src","avatar_url","userCardInfoContainer","InfoItemContainer","InfoItemtext","name","email","location","created_at","followers","following","bio","defaultProps","avatar","Filter","onChange","filterInputContainer","filterInput","placeholder","length","e","preventDefault","value","target","UsersList","filter","foundUsers","usersList","map","user","usersListItem","usersListItemButton","login","usersListItemAvatar","usersListItemName","node_id","RepositoriesList","foundRepositories","repositoriesList","repositorie","repositoriesItem","contact_item_container","repositoriesListItemLink","href","html_url","contact_name","repositoriesListItemContainer","repositoriesListTextContainer","repositoriesListItemName","forks","stargazers_count","AtlanaRepositorySearchApp","useDispatch","useState","setFilter","useEffect","useSelector","selectors","toLowerCase","includes","handleFindUsers","handleFindRepositories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91c64173.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3p6wV\",\"goBackButton\":\"header_goBackButton__3zeIc\",\"headerTitle\":\"header_headerTitle__2gLrU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInputContainer\":\"Filter_filterInputContainer__KDC_R\",\"filterInput\":\"Filter_filterInput__2TVMU\",\"search_input\":\"Filter_search_input__Cgsgg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"repositoriesList\":\"repositoriesList_repositoriesList__2k_Ji\",\"repositoriesItem\":\"repositoriesList_repositoriesItem__CZMcr\",\"repositoriesListItemLink\":\"repositoriesList_repositoriesListItemLink__3giDG\",\"repositoriesListItemContainer\":\"repositoriesList_repositoriesListItemContainer___1sP_\",\"repositoriesListTextContainer\":\"repositoriesList_repositoriesListTextContainer__2LKmz\",\"repositoriesListItemName\":\"repositoriesList_repositoriesListItemName__gev4R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userCardContainer\":\"userInformation_userCardContainer__3eOBu\",\"userCard\":\"userInformation_userCard__3quaX\",\"userAvatar\":\"userInformation_userAvatar__3LM88\",\"userCardInfoContainer\":\"userInformation_userCardInfoContainer__1z039\",\"InfoItemContainer\":\"userInformation_InfoItemContainer__314Ei\",\"InfoItemtext\":\"userInformation_InfoItemtext__1kLJK\"};","import {createAction} from '@reduxjs/toolkit';\r\n\r\nconst getUsersDataRequest = createAction('getUsers/getUsersDataRequest');\r\nconst getUsersDataSuccess = createAction('getUsers/getUsersDataSuccess');\r\nconst getUsersDataError = createAction('getUsers/getUsersDataError');\r\n\r\nexport default {getUsersDataRequest, getUsersDataSuccess, getUsersDataError};","import {createReducer} from '@reduxjs/toolkit';\r\n\r\nimport getUsersDataActions from '../actions/getUsersDataActions';\r\n\r\nconst usersDataReducer = createReducer([], {\r\n    [getUsersDataActions.getUsersDataSuccess]: (_, {payload}) => [...payload]\r\n});\r\n\r\nexport default usersDataReducer;","import {createAction} from '@reduxjs/toolkit';\r\n\r\nconst getUserDataRequest = createAction('getUser/getUserDataRequest');\r\nconst getUserDataSuccess = createAction('getUser/getUserDataSuccess');\r\nconst getUserDataError = createAction('getUser/getUserDataError');\r\n\r\nexport default {getUserDataRequest, getUserDataSuccess, getUserDataError};","import {createAction} from '@reduxjs/toolkit';\r\n\r\nconst resetRequest = createAction('resetActions/resetDataRequest');\r\nconst resetSuccess = createAction('resetActions/resetSuccess');\r\nconst resetError = createAction('resetActions/resetError');\r\n\r\nexport default {resetRequest, resetSuccess, resetError};","import {createReducer} from '@reduxjs/toolkit';\r\n\r\nimport getUserDataActions from '../actions/getUserDataActions';\r\nimport resetActions from '../actions/resetActions';\r\n\r\nconst usersDataReducer = createReducer([], {\r\n    [getUserDataActions.getUserDataSuccess]: (_, {payload}) => payload,\r\n    [resetActions.resetSuccess]: (_, {payload}) => payload\r\n});\r\n\r\nexport default usersDataReducer;","import {createAction} from '@reduxjs/toolkit';\r\n\r\nconst getUserRepositoriesRequest = createAction('getRepositories/getUserRepositoriesRequest');\r\nconst getUserRepositoriesSuccess = createAction('getRepositories/getUserRepositoriesSuccess');\r\nconst getUserRepositoriesError = createAction('getRepositories/getUserRepositoriesError');\r\n\r\nexport default {getUserRepositoriesRequest, getUserRepositoriesSuccess, getUserRepositoriesError};","import {createReducer} from '@reduxjs/toolkit';\r\n\r\nimport getUserRepositoriesActions from '../actions/getUserRepositoriesActions';\r\nimport resetActions from '../actions/resetActions';\r\n\r\nconst userRepositoriesReducer = createReducer([], {\r\n    [getUserRepositoriesActions.getUserRepositoriesSuccess]: (_, {payload}) => payload,\r\n    [resetActions.resetSuccess]: (_, {payload}) => payload\r\n});\r\n\r\nexport default userRepositoriesReducer;","import {createReducer} from '@reduxjs/toolkit';\r\n\r\nimport getUsersDataActions from '../actions/getUsersDataActions';\r\nimport getUserDataActions from '../actions/getUserDataActions';\r\nimport getUserRepositoriesActions from '../actions/getUserRepositoriesActions';\r\nimport resetActions from '../actions/resetActions';\r\n\r\nconst usersDataReducer = createReducer('', {\r\n    [getUsersDataActions.getUsersDataError]: (_, {payload}) => payload,\r\n    [getUserDataActions.getUserDataError]: (_, {payload}) => payload,\r\n    [getUserRepositoriesActions.getUserRepositoriesError]: (_, {payload}) => payload,\r\n    [resetActions.resetError]: (_, {payload}) => payload\r\n});\r\n\r\nexport default usersDataReducer;","import {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\r\n\r\nimport usersDataReducer from './reducers/usersDataReducer';\r\nimport userDataReducer from './reducers/userDataReducer';\r\nimport userRepositoriesReducer from './reducers/userRepositoriesReducer';\r\nimport errorReducer from './reducers/errorReducer';\r\n\r\nimport logger from 'redux-logger';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        usersData: usersDataReducer,\r\n        userData: userDataReducer,\r\n        userRepositories: userRepositoriesReducer,\r\n        error: errorReducer\r\n    },\r\n    middleware: process.env.NODE_ENV === 'development' ?\r\n        [...getDefaultMiddleware({ serializableCheck: false }), logger] :\r\n        [...getDefaultMiddleware({ serializableCheck: false })],\r\n        devTools: process.env.NODE_ENV === 'development'\r\n});\r\n\r\nexport default {store};","import axios from \"axios\";\r\nimport getUsersDataActions from '../actions/getUsersDataActions';\r\n\r\naxios.defaults.baseURL = 'https://api.github.com';\r\n\r\naxios.defaults.headers.common.Accept = `application/vnd.github.v3+json`;\r\n\r\nconst getUsersDataOperation = () => async (dispatch) => {\r\n\r\n    dispatch(getUsersDataActions.getUsersDataRequest());\r\n\r\n    try {\r\n        const response = await axios.get('/users');\r\n\r\n        dispatch(getUsersDataActions.getUsersDataSuccess(response.data));\r\n    } catch(error) {\r\n        dispatch(getUsersDataActions.getUsersDataError(error.message));\r\n    };\r\n};\r\n\r\nexport default getUsersDataOperation;","import axios from \"axios\";\r\nimport getUserDataActions from '../actions/getUserDataActions';\r\n\r\naxios.defaults.baseURL = 'https://api.github.com';\r\n\r\naxios.defaults.headers.common.Accept = `application/vnd.github.v3+json`;\r\n\r\nconst getUserDataOperation = (userLogin) => async (dispatch) => {\r\n\r\n    dispatch(getUserDataActions.getUserDataRequest());\r\n\r\n    try {\r\n        \r\n        const response = await axios.get(`/users/${userLogin}`);\r\n\r\n        dispatch(getUserDataActions.getUserDataSuccess(response.data));\r\n    } catch(error) {\r\n        dispatch(getUserDataActions.getUserDataError(error.message));\r\n    };\r\n};\r\n\r\nexport default getUserDataOperation;","import axios from \"axios\";\r\nimport getUserRepositoriesActions from '../actions/getUserRepositoriesActions';\r\n\r\naxios.defaults.baseURL = 'https://api.github.com';\r\n\r\naxios.defaults.headers.common.Accept = `application/vnd.github.v3+json`;\r\n\r\nconst getUserRepositoriesOperation = (userLogin) => async (dispatch) => {\r\n\r\n    dispatch(getUserRepositoriesActions.getUserRepositoriesRequest());\r\n\r\n    try {\r\n        \r\n        const response = await axios.get(`/users/${userLogin}/repos`);\r\n        \r\n        dispatch(getUserRepositoriesActions.getUserRepositoriesSuccess(response.data));\r\n    } catch(error) {\r\n        dispatch(getUserRepositoriesActions.getUserRepositoriesError(error.message));\r\n    };\r\n};\r\n\r\nexport default getUserRepositoriesOperation;","import resetActions from '../actions/resetActions';\r\n\r\nconst resetUserAndRepositoriesDataOperation = () => async (dispatch) => {\r\n\r\n    dispatch(resetActions.resetRequest());\r\n\r\n    try {\r\n        \r\n        dispatch(resetActions.resetSuccess([]));\r\n\r\n    } catch(error) {\r\n        dispatch(resetActions.resetError(error.message));\r\n    };\r\n};\r\n\r\nexport default resetUserAndRepositoriesDataOperation;","import {createSelector} from 'reselect';\r\n  \r\nconst getAllUsers = state => state.usersData;\r\n\r\nconst getAllRepositories = state => state.userRepositories;\r\n\r\nconst getUserData = state => state.userData;\r\n\r\nconst getAllUsersSelector = createSelector([getAllUsers], users => users);\r\n\r\nconst getAllRepositoriesSelector = createSelector([getAllRepositories], repositories => repositories);\r\n\r\nconst getUserDataSelector = createSelector([getUserData], userData => userData);\r\n\r\nexport default {\r\n  getAllUsers,\r\n  getAllRepositories,\r\n  getUserData,\r\n  getAllUsersSelector,\r\n  getAllRepositoriesSelector,\r\n  getUserDataSelector\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './header.module.css'\r\n\r\nconst Header = ({onClick}) => {\r\n    return (\r\n        <section className={styles.header}>\r\n            <button className={styles.goBackButton} type='button' onClick={onClick}>\r\n                <h1 className={styles.headerTitle}>GitHub Searcher</h1>\r\n            </button>\r\n        </section>\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './userInformation.module.css';\r\n\r\nconst UserInformation = ({userData}) => (\r\n  <div className={styles.userCardContainer}>\r\n    <div className={styles.userCard}>\r\n      <img className={styles.userAvatar} src={userData.avatar_url} />\r\n      <div className={styles.userCardInfoContainer}>\r\n        <div className={styles.InfoItemContainer}>\r\n          <p className={styles.InfoItemtext}>User Name </p>\r\n          {userData.name && <p className={styles.InfoItemtext}>{userData.name}</p>}\r\n        </div>\r\n        <div className={styles.InfoItemContainer}>\r\n          <p className={styles.InfoItemtext}>Email </p>\r\n          {userData.email && <p className={styles.InfoItemtext}>{userData.email}</p>}\r\n        </div>\r\n        <div className={styles.InfoItemContainer}>\r\n          <p className={styles.InfoItemtext}>Location </p>\r\n          {userData.location && <p className={styles.InfoItemtext}>{userData.location}</p>}\r\n        </div>\r\n        <div className={styles.InfoItemContainer}>\r\n          <p className={styles.InfoItemtext}>Join Date </p>\r\n          {userData.created_at && <p className={styles.InfoItemtext}>{userData.created_at}</p>}\r\n        </div>\r\n        <div className={styles.InfoItemContainer}>\r\n          <p className={styles.InfoItemtext}>Followers </p>\r\n          {userData.followers && <p className={styles.InfoItemtext}>{userData.followers}</p>}\r\n        </div>\r\n        <div className={styles.InfoItemContainer}>\r\n          <p className={styles.InfoItemtext}>Following </p>\r\n          {userData.following && <p className={styles.InfoItemtext}>{userData.following}</p>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    {userData.bio && <p>{userData.bio}</p>}\r\n  </div>\r\n);\r\n\r\nUserInformation.defaultProps = {\r\n  avatar: ''\r\n};\r\n\r\nUserInformation.propTypes = {\r\n  userData: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default UserInformation;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({repositories, onChange}) => (\r\n    <div className={styles.filterInputContainer}>\r\n        <input \r\n            className={styles.filterInput} \r\n            type=\"text\" \r\n            placeholder={repositories.length === 0 ? \"Search for users\" : \"Search for User's Repositories\"} \r\n            onChange={(e) => {\r\n                e.preventDefault();\r\n                const value = e.target.value;\r\n                onChange(value);\r\n            }\r\n        }>\r\n        </input>\r\n    </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './usersList.module.css';\r\n\r\nconst UsersList = ({filter, users, foundUsers, onClick}) => (\r\n  <ul className={styles.usersList}>\r\n    {filter === '' ?\r\n      users.map(user => (\r\n        <li className={styles.usersListItem} key={user.node_id}>\r\n            <button className={styles.usersListItemButton} type=\"button\" onClick={e => onClick(user.login)}>\r\n              <img className={styles.usersListItemAvatar} src={user.avatar_url} />\r\n              <p className={styles.usersListItemName}>{user.login}</p>\r\n              <p className={styles.usersListItemName}>Repo:##</p>\r\n            </button>\r\n        </li>\r\n      )) :\r\n      foundUsers.map(user => (\r\n        <li className={styles.usersListItem} key={user.node_id}>\r\n            <button className={styles.usersListItemButton} type=\"button\" onClick={e => onClick(user.login)}>\r\n              <img className={styles.usersListItemAvatar} src={user.avatar_url} />\r\n              <p className={styles.usersListItemName}>{user.login}</p>\r\n              <p className={styles.usersListItemName}>Repo:##</p>\r\n            </button>\r\n        </li>\r\n      ))\r\n    }\r\n  </ul>\r\n);\r\n\r\nUsersList.defaultProps = {\r\n  avatar: '',\r\n  foundUsers: []\r\n};\r\n\r\nUsersList.propTypes = {\r\n  foundUsers: PropTypes.arrayOf(\r\n    PropTypes.object\r\n  ),\r\n  users: PropTypes.arrayOf(\r\n    PropTypes.object.isRequired\r\n  ).isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default UsersList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './repositoriesList.module.css';\r\n\r\nconst RepositoriesList = ({filter, repositories, foundRepositories}) => (\r\n  <ul className={styles.repositoriesList}>\r\n    {filter === '' ?\r\n      repositories.map(repositorie => (\r\n        <li className={styles.repositoriesItem} key={repositorie.node_id}>\r\n          <div className={styles.contact_item_container}>\r\n            <a className={styles.repositoriesListItemLink} href={repositorie.html_url} target=\"_blank\">\r\n              <p className={styles.contact_name}>{repositorie.name}</p>\r\n              <div className={styles.repositoriesListItemContainer}>\r\n                <div className={styles.repositoriesListTextContainer}>\r\n                  <p className={styles.repositoriesListItemName}>Forks </p>\r\n                  {repositorie.forks && <p className={styles.repositoriesListItemName}>{repositorie.forks}</p>}\r\n                </div>\r\n                <div className={styles.repositoriesListTextContainer}>\r\n                  <p className={styles.repositoriesListItemName}>Stars </p>\r\n                  {repositorie.stargazers_count && <p className={styles.repositoriesListItemName}>{repositorie.stargazers_count}</p>}\r\n                </div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </li>\r\n      )) :\r\n      foundRepositories.map(repositorie => (\r\n        <li className={styles.repositoriesItem} key={repositorie.node_id}>\r\n          <div className={styles.contact_item_container}>\r\n            <a className={styles.repositoriesListItemLink} href={repositorie.html_url} target=\"_blank\">\r\n              <p className={styles.contact_name}>{repositorie.name}</p>\r\n              <div className={styles.repositoriesListItemContainer}>\r\n                <div className={styles.repositoriesListTextContainer}>\r\n                  <p className={styles.repositoriesListItemName}>Forks </p>\r\n                  {repositorie.forks && <p className={styles.repositoriesListItemName}>{repositorie.forks}</p>}\r\n                </div>\r\n                <div className={styles.repositoriesListTextContainer}>\r\n                  <p className={styles.repositoriesListItemName}>Stars </p>\r\n                  {repositorie.stargazers_count && <p className={styles.repositoriesListItemName}>{repositorie.stargazers_count}</p>}\r\n                </div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </li>\r\n      ))\r\n    }\r\n  </ul>\r\n);\r\n\r\nRepositoriesList.defaultProps = {\r\n  avatar: '',\r\n  foundRepositories: []\r\n};\r\n\r\nRepositoriesList.propTypes = {\r\n    foundRepositories: PropTypes.arrayOf(\r\n      PropTypes.object\r\n    ),\r\n    repositories: PropTypes.arrayOf(\r\n        PropTypes.object.isRequired\r\n    ).isRequired,\r\n    filter: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default RepositoriesList;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport getUsersDataOperation from './redux/operations/getUsersDataOperation';\r\nimport getUserDataOperation from './redux/operations/getUserDataOperation';\r\nimport getUserRepositoriesOperation from './redux/operations/getUserRepositoriesOperation';\r\nimport resetUserAndRepositoriesDataOperation from './redux/operations/resetUserAndRepositoriesDataOperation';\r\n\r\nimport selectors from './redux/selectors/selectors';\r\n\r\nimport Header from './components/Header/header';\r\nimport UserInformation from './components/UserInformation/UserInformation';\r\nimport Filter from './components/Filter/Filter'\r\nimport UsersList from './components/UsersList/UsersList';\r\nimport RepositoriesList from './components/RepositoriesList/RepositoriesList';\r\n\r\nimport './App.css';\r\n\r\nconst AtlanaRepositorySearchApp = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsersDataOperation());\r\n    \r\n  }, []);\r\n\r\n  const handleChange = (value) => {\r\n    setFilter(value);\r\n  };\r\n\r\n  const handleFindUsers = (users) => {\r\n    if (filter !== '' && users.length > 0) {\r\n      const foundUsers = users.filter(user => \r\n        user.login.toLowerCase().includes(filter));\r\n      return foundUsers\r\n    };\r\n  };\r\n\r\n  const handleFindRepositories = (repositories) => {\r\n    if (filter !== '' && repositories.length > 0) {\r\n      const foundRepositories = repositories.filter(repositorie => \r\n        repositorie.name.toLowerCase().includes(filter));\r\n      return foundRepositories\r\n    };\r\n  };\r\n\r\n  const handleClick = (userLogin) => {\r\n    dispatch(getUserDataOperation(userLogin));\r\n    dispatch(getUserRepositoriesOperation(userLogin));\r\n  };\r\n\r\n  const handleGoBack = () => {\r\n    dispatch(resetUserAndRepositoriesDataOperation());\r\n  };\r\n\r\n  const users = useSelector(selectors.getAllUsers);\r\n  const foundUsers = handleFindUsers(users);\r\n\r\n  const userData = useSelector(selectors.getUserDataSelector);\r\n\r\n  const repositories = useSelector(selectors.getAllRepositoriesSelector);\r\n  const foundRepositories = handleFindRepositories(repositories);\r\n\r\n  return (\r\n      <section className=\"section\">\r\n        <Header onClick={handleGoBack} />\r\n        {userData['node_id'] && <UserInformation userData={userData} />}\r\n        <Filter repositories={repositories} onChange={handleChange} />\r\n        {repositories.length === 0 ? \r\n          <UsersList filter={filter} users={users} foundUsers={foundUsers} onClick={handleClick} /> :\r\n          <RepositoriesList filter={filter} repositories={repositories} foundRepositories={foundRepositories} />\r\n        }\r\n      </section>\r\n  );\r\n};\r\n\r\nexport default AtlanaRepositorySearchApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/store';\r\nimport AtlanaRepositorySearchApp from './App';\r\n\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store.store}>\r\n      <React.StrictMode>\r\n          <AtlanaRepositorySearchApp />\r\n      </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersList\":\"usersList_usersList__2nT-6\",\"usersListItem\":\"usersList_usersListItem__3IiEK\",\"usersListItemButton\":\"usersList_usersListItemButton__56rpN\",\"usersListItemAvatar\":\"usersList_usersListItemAvatar__1Gn8Q\",\"usersListItemName\":\"usersList_usersListItemName__3E8gl\"};"],"sourceRoot":""}